
Plantilla.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000a8a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a16  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  00000a8a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a8a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000abc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000afc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001189  00000000  00000000  00000bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000085f  00000000  00000000  00001d4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001206  00000000  00000000  000025ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000158  00000000  00000000  000037b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005cf  00000000  00000000  0000390c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cc6  00000000  00000000  00003edb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00004ba1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 f3 01 	jmp	0x3e6	; 0x3e6 <__vector_4>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	29 03       	fmul	r18, r17
  6a:	35 03       	mulsu	r19, r21
  6c:	41 03       	mulsu	r20, r17
  6e:	4d 03       	fmul	r20, r21
  70:	59 03       	fmul	r21, r17
  72:	65 03       	mulsu	r22, r21
  74:	71 03       	mulsu	r23, r17
  76:	7d 03       	fmul	r23, r21
  78:	23 04       	cpc	r2, r3
  7a:	2a 04       	cpc	r2, r10
  7c:	31 04       	cpc	r3, r1
  7e:	38 04       	cpc	r3, r8
  80:	3f 04       	cpc	r3, r15
  82:	46 04       	cpc	r4, r6
  84:	4d 04       	cpc	r4, r13
  86:	54 04       	cpc	r5, r4
  88:	65 04       	cpc	r6, r5
  8a:	6c 04       	cpc	r6, r12
  8c:	73 04       	cpc	r7, r3
  8e:	7a 04       	cpc	r7, r10
  90:	81 04       	cpc	r8, r1
  92:	88 04       	cpc	r8, r8
  94:	8f 04       	cpc	r8, r15
  96:	96 04       	cpc	r9, r6
  98:	9d 04       	cpc	r9, r13
  9a:	a1 04       	cpc	r10, r1

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf ef       	ldi	r28, 0xFF	; 255
  a2:	d8 e0       	ldi	r29, 0x08	; 8
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_clear_bss>:
  a8:	21 e0       	ldi	r18, 0x01	; 1
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
  b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
  b2:	a3 30       	cpi	r26, 0x03	; 3
  b4:	b2 07       	cpc	r27, r18
  b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>
  b8:	0e 94 45 01 	call	0x28a	; 0x28a <main>
  bc:	0c 94 09 05 	jmp	0xa12	; 0xa12 <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <Setup>:
	------------------------------------------------------
*/

void Setup(void){
	//Entradas
	SetupEntrada(C,PC0); //MENU
  c4:	60 e0       	ldi	r22, 0x00	; 0
  c6:	82 e0       	ldi	r24, 0x02	; 2
  c8:	0e 94 2a 02 	call	0x454	; 0x454 <SetupEntrada>
	SetupEntrada(C,PC1); //JUGADOR 1
  cc:	61 e0       	ldi	r22, 0x01	; 1
  ce:	82 e0       	ldi	r24, 0x02	; 2
  d0:	0e 94 2a 02 	call	0x454	; 0x454 <SetupEntrada>
	SetupEntrada(C,PC2); //JUGADOR 2 
  d4:	62 e0       	ldi	r22, 0x02	; 2
  d6:	82 e0       	ldi	r24, 0x02	; 2
  d8:	0e 94 2a 02 	call	0x454	; 0x454 <SetupEntrada>
	/*SetupEntrada(B, PORTB3);
	SetupEntrada(B,PORTB4);*/
	//Salidas
	SetupSalida(Todo, D); //Led manual
  dc:	63 e0       	ldi	r22, 0x03	; 3
  de:	84 e0       	ldi	r24, 0x04	; 4
  e0:	0e 94 89 03 	call	0x712	; 0x712 <SetupSalida>
	SetupSalida(Todo,B);
  e4:	61 e0       	ldi	r22, 0x01	; 1
  e6:	84 e0       	ldi	r24, 0x04	; 4
  e8:	0e 94 89 03 	call	0x712	; 0x712 <SetupSalida>
  ec:	08 95       	ret

000000ee <Jug1LED>:
	//SetupTimer0(1024, 250);
	
}

void Jug1LED(void){
	switch (Jg1)
  ee:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <Jg1>
  f2:	82 30       	cpi	r24, 0x02	; 2
  f4:	69 f1       	breq	.+90     	; 0x150 <Jug1LED+0x62>
  f6:	28 f4       	brcc	.+10     	; 0x102 <Jug1LED+0x14>
  f8:	88 23       	and	r24, r24
  fa:	49 f0       	breq	.+18     	; 0x10e <Jug1LED+0x20>
  fc:	81 30       	cpi	r24, 0x01	; 1
  fe:	b1 f0       	breq	.+44     	; 0x12c <Jug1LED+0x3e>
 100:	08 95       	ret
 102:	83 30       	cpi	r24, 0x03	; 3
 104:	b9 f1       	breq	.+110    	; 0x174 <Jug1LED+0x86>
 106:	84 30       	cpi	r24, 0x04	; 4
 108:	09 f4       	brne	.+2      	; 0x10c <Jug1LED+0x1e>
 10a:	46 c0       	rjmp	.+140    	; 0x198 <Jug1LED+0xaa>
 10c:	08 95       	ret
	{
	case 0:
		PORTD &= ~(0xFF);
 10e:	8b b1       	in	r24, 0x0b	; 11
 110:	1b b8       	out	0x0b, r1	; 11
		PORTB |= (1<<PORTB1);
 112:	85 b1       	in	r24, 0x05	; 5
 114:	82 60       	ori	r24, 0x02	; 2
 116:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 118:	8f e1       	ldi	r24, 0x1F	; 31
 11a:	9e e4       	ldi	r25, 0x4E	; 78
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <Jug1LED+0x2e>
 120:	00 c0       	rjmp	.+0      	; 0x122 <Jug1LED+0x34>
 122:	00 00       	nop
		_delay_ms(5); 
		PORTB &= ~(1<<PORTB1);
 124:	85 b1       	in	r24, 0x05	; 5
 126:	8d 7f       	andi	r24, 0xFD	; 253
 128:	85 b9       	out	0x05, r24	; 5
		break;
 12a:	08 95       	ret
	case 1:
		PORTD &= ~(0xFF);
 12c:	8b b1       	in	r24, 0x0b	; 11
 12e:	1b b8       	out	0x0b, r1	; 11
		PORTD |= (1<<PORTD0);
 130:	8b b1       	in	r24, 0x0b	; 11
 132:	81 60       	ori	r24, 0x01	; 1
 134:	8b b9       	out	0x0b, r24	; 11
		PORTB |= (1<<PORTB1);
 136:	85 b1       	in	r24, 0x05	; 5
 138:	82 60       	ori	r24, 0x02	; 2
 13a:	85 b9       	out	0x05, r24	; 5
 13c:	8f e1       	ldi	r24, 0x1F	; 31
 13e:	9e e4       	ldi	r25, 0x4E	; 78
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <Jug1LED+0x52>
 144:	00 c0       	rjmp	.+0      	; 0x146 <Jug1LED+0x58>
 146:	00 00       	nop
		_delay_ms(5);
		PORTB &= ~(1<<PORTB1);
 148:	85 b1       	in	r24, 0x05	; 5
 14a:	8d 7f       	andi	r24, 0xFD	; 253
 14c:	85 b9       	out	0x05, r24	; 5
		break;
 14e:	08 95       	ret
	case 2:
		PORTD &= ~(0xFF);
 150:	8b b1       	in	r24, 0x0b	; 11
 152:	1b b8       	out	0x0b, r1	; 11
		PORTD |= ((1<<PORTD0)|(1<<PORTD1));
 154:	8b b1       	in	r24, 0x0b	; 11
 156:	83 60       	ori	r24, 0x03	; 3
 158:	8b b9       	out	0x0b, r24	; 11
		PORTB |= (1<<PORTB1);
 15a:	85 b1       	in	r24, 0x05	; 5
 15c:	82 60       	ori	r24, 0x02	; 2
 15e:	85 b9       	out	0x05, r24	; 5
 160:	8f e1       	ldi	r24, 0x1F	; 31
 162:	9e e4       	ldi	r25, 0x4E	; 78
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <Jug1LED+0x76>
 168:	00 c0       	rjmp	.+0      	; 0x16a <Jug1LED+0x7c>
 16a:	00 00       	nop
		_delay_ms(5);
		PORTB &= ~(1<<PORTB1);
 16c:	85 b1       	in	r24, 0x05	; 5
 16e:	8d 7f       	andi	r24, 0xFD	; 253
 170:	85 b9       	out	0x05, r24	; 5
		break;
 172:	08 95       	ret
	case 3:
		PORTD &= ~(0xFF);
 174:	8b b1       	in	r24, 0x0b	; 11
 176:	1b b8       	out	0x0b, r1	; 11
		PORTD |= ((1<<PORTD0)|(1<<PORTD1)|(1<<PORTD2));
 178:	8b b1       	in	r24, 0x0b	; 11
 17a:	87 60       	ori	r24, 0x07	; 7
 17c:	8b b9       	out	0x0b, r24	; 11
		PORTB |= (1<<PORTB1);
 17e:	85 b1       	in	r24, 0x05	; 5
 180:	82 60       	ori	r24, 0x02	; 2
 182:	85 b9       	out	0x05, r24	; 5
 184:	8f e1       	ldi	r24, 0x1F	; 31
 186:	9e e4       	ldi	r25, 0x4E	; 78
 188:	01 97       	sbiw	r24, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <Jug1LED+0x9a>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <Jug1LED+0xa0>
 18e:	00 00       	nop
		_delay_ms(5);
		PORTB &= ~(1<<PORTB1);
 190:	85 b1       	in	r24, 0x05	; 5
 192:	8d 7f       	andi	r24, 0xFD	; 253
 194:	85 b9       	out	0x05, r24	; 5
		break;
 196:	08 95       	ret
	case 4:
		PORTD &= ~(0xFF);
 198:	8b b1       	in	r24, 0x0b	; 11
 19a:	1b b8       	out	0x0b, r1	; 11
		PORTD |= 0x0F;
 19c:	8b b1       	in	r24, 0x0b	; 11
 19e:	8f 60       	ori	r24, 0x0F	; 15
 1a0:	8b b9       	out	0x0b, r24	; 11
		PORTB |= (1<<PORTB1);
 1a2:	85 b1       	in	r24, 0x05	; 5
 1a4:	82 60       	ori	r24, 0x02	; 2
 1a6:	85 b9       	out	0x05, r24	; 5
 1a8:	8f e1       	ldi	r24, 0x1F	; 31
 1aa:	9e e4       	ldi	r25, 0x4E	; 78
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <Jug1LED+0xbe>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <Jug1LED+0xc4>
 1b2:	00 00       	nop
		_delay_ms(5);
		PORTB &= ~(1<<PORTB1);
 1b4:	85 b1       	in	r24, 0x05	; 5
 1b6:	8d 7f       	andi	r24, 0xFD	; 253
 1b8:	85 b9       	out	0x05, r24	; 5
 1ba:	08 95       	ret

000001bc <Jug2LED>:
		break;		
	}
}

void Jug2LED(void){
	switch (Jg2)
 1bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1c0:	82 30       	cpi	r24, 0x02	; 2
 1c2:	69 f1       	breq	.+90     	; 0x21e <Jug2LED+0x62>
 1c4:	28 f4       	brcc	.+10     	; 0x1d0 <Jug2LED+0x14>
 1c6:	88 23       	and	r24, r24
 1c8:	49 f0       	breq	.+18     	; 0x1dc <Jug2LED+0x20>
 1ca:	81 30       	cpi	r24, 0x01	; 1
 1cc:	b1 f0       	breq	.+44     	; 0x1fa <Jug2LED+0x3e>
 1ce:	08 95       	ret
 1d0:	83 30       	cpi	r24, 0x03	; 3
 1d2:	b9 f1       	breq	.+110    	; 0x242 <Jug2LED+0x86>
 1d4:	84 30       	cpi	r24, 0x04	; 4
 1d6:	09 f4       	brne	.+2      	; 0x1da <Jug2LED+0x1e>
 1d8:	46 c0       	rjmp	.+140    	; 0x266 <Jug2LED+0xaa>
 1da:	08 95       	ret
	{
		case 0:
			PORTD &= ~(0xFF);
 1dc:	8b b1       	in	r24, 0x0b	; 11
 1de:	1b b8       	out	0x0b, r1	; 11
			PORTB |= (1<<PORTB2);
 1e0:	85 b1       	in	r24, 0x05	; 5
 1e2:	84 60       	ori	r24, 0x04	; 4
 1e4:	85 b9       	out	0x05, r24	; 5
 1e6:	8f e1       	ldi	r24, 0x1F	; 31
 1e8:	9e e4       	ldi	r25, 0x4E	; 78
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <Jug2LED+0x2e>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <Jug2LED+0x34>
 1f0:	00 00       	nop
			_delay_ms(5);
			PORTB &= ~(1<<PORTB2);
 1f2:	85 b1       	in	r24, 0x05	; 5
 1f4:	8b 7f       	andi	r24, 0xFB	; 251
 1f6:	85 b9       	out	0x05, r24	; 5
				break;
 1f8:	08 95       	ret
		case 1:
			PORTD &= ~(0xFF);
 1fa:	8b b1       	in	r24, 0x0b	; 11
 1fc:	1b b8       	out	0x0b, r1	; 11
			PORTD |= (1<<PORTD4);
 1fe:	8b b1       	in	r24, 0x0b	; 11
 200:	80 61       	ori	r24, 0x10	; 16
 202:	8b b9       	out	0x0b, r24	; 11
			PORTB |= (1<<PORTB2);
 204:	85 b1       	in	r24, 0x05	; 5
 206:	84 60       	ori	r24, 0x04	; 4
 208:	85 b9       	out	0x05, r24	; 5
 20a:	8f e1       	ldi	r24, 0x1F	; 31
 20c:	9e e4       	ldi	r25, 0x4E	; 78
 20e:	01 97       	sbiw	r24, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <Jug2LED+0x52>
 212:	00 c0       	rjmp	.+0      	; 0x214 <Jug2LED+0x58>
 214:	00 00       	nop
			_delay_ms(5);
			PORTB &= ~(1<<PORTB2);
 216:	85 b1       	in	r24, 0x05	; 5
 218:	8b 7f       	andi	r24, 0xFB	; 251
 21a:	85 b9       	out	0x05, r24	; 5
				break;
 21c:	08 95       	ret
		case 2:
			PORTD &= ~(0xFF);
 21e:	8b b1       	in	r24, 0x0b	; 11
 220:	1b b8       	out	0x0b, r1	; 11
			PORTD |= ((1<<PORTD4)|(1<<PORTD5));
 222:	8b b1       	in	r24, 0x0b	; 11
 224:	80 63       	ori	r24, 0x30	; 48
 226:	8b b9       	out	0x0b, r24	; 11
			PORTB |= (1<<PORTB2);
 228:	85 b1       	in	r24, 0x05	; 5
 22a:	84 60       	ori	r24, 0x04	; 4
 22c:	85 b9       	out	0x05, r24	; 5
 22e:	8f e1       	ldi	r24, 0x1F	; 31
 230:	9e e4       	ldi	r25, 0x4E	; 78
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <Jug2LED+0x76>
 236:	00 c0       	rjmp	.+0      	; 0x238 <Jug2LED+0x7c>
 238:	00 00       	nop
			_delay_ms(5);
			PORTB &= ~(1<<PORTB2);
 23a:	85 b1       	in	r24, 0x05	; 5
 23c:	8b 7f       	andi	r24, 0xFB	; 251
 23e:	85 b9       	out	0x05, r24	; 5
				break;
 240:	08 95       	ret
		case 3:
			PORTD &= ~(0xFF);
 242:	8b b1       	in	r24, 0x0b	; 11
 244:	1b b8       	out	0x0b, r1	; 11
			PORTD |= ((1<<PORTD4)|(1<<PORTD5)|(1<<PORTD6));
 246:	8b b1       	in	r24, 0x0b	; 11
 248:	80 67       	ori	r24, 0x70	; 112
 24a:	8b b9       	out	0x0b, r24	; 11
			PORTB |= (1<<PORTB2);
 24c:	85 b1       	in	r24, 0x05	; 5
 24e:	84 60       	ori	r24, 0x04	; 4
 250:	85 b9       	out	0x05, r24	; 5
 252:	8f e1       	ldi	r24, 0x1F	; 31
 254:	9e e4       	ldi	r25, 0x4E	; 78
 256:	01 97       	sbiw	r24, 0x01	; 1
 258:	f1 f7       	brne	.-4      	; 0x256 <Jug2LED+0x9a>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <Jug2LED+0xa0>
 25c:	00 00       	nop
			_delay_ms(5);
			PORTB &= ~(1<<PORTB2);
 25e:	85 b1       	in	r24, 0x05	; 5
 260:	8b 7f       	andi	r24, 0xFB	; 251
 262:	85 b9       	out	0x05, r24	; 5
				break;
 264:	08 95       	ret
		case 4:
			PORTD &= ~(0xFF);
 266:	8b b1       	in	r24, 0x0b	; 11
 268:	1b b8       	out	0x0b, r1	; 11
			PORTD |= 0xF0;
 26a:	8b b1       	in	r24, 0x0b	; 11
 26c:	80 6f       	ori	r24, 0xF0	; 240
 26e:	8b b9       	out	0x0b, r24	; 11
			PORTB |= (1<<PORTB2);
 270:	85 b1       	in	r24, 0x05	; 5
 272:	84 60       	ori	r24, 0x04	; 4
 274:	85 b9       	out	0x05, r24	; 5
 276:	8f e1       	ldi	r24, 0x1F	; 31
 278:	9e e4       	ldi	r25, 0x4E	; 78
 27a:	01 97       	sbiw	r24, 0x01	; 1
 27c:	f1 f7       	brne	.-4      	; 0x27a <Jug2LED+0xbe>
 27e:	00 c0       	rjmp	.+0      	; 0x280 <Jug2LED+0xc4>
 280:	00 00       	nop
			_delay_ms(5);
			PORTB &= ~(1<<PORTB2);
 282:	85 b1       	in	r24, 0x05	; 5
 284:	8b 7f       	andi	r24, 0xFB	; 251
 286:	85 b9       	out	0x05, r24	; 5
 288:	08 95       	ret

0000028a <main>:
	------------------------------------------------------
*/

int main(void)
{
    cli();
 28a:	f8 94       	cli
	Setup();
 28c:	0e 94 62 00 	call	0xc4	; 0xc4 <Setup>
	sei();
 290:	78 94       	sei
	
    while (1) 
    {
		
		switch (Menu)
 292:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Menu>
 296:	82 30       	cpi	r24, 0x02	; 2
 298:	89 f1       	breq	.+98     	; 0x2fc <main+0x72>
 29a:	30 f4       	brcc	.+12     	; 0x2a8 <main+0x1e>
 29c:	88 23       	and	r24, r24
 29e:	09 f4       	brne	.+2      	; 0x2a2 <main+0x18>
 2a0:	9c c0       	rjmp	.+312    	; 0x3da <main+0x150>
 2a2:	81 30       	cpi	r24, 0x01	; 1
 2a4:	f1 f1       	breq	.+124    	; 0x322 <main+0x98>
 2a6:	f5 cf       	rjmp	.-22     	; 0x292 <main+0x8>
 2a8:	83 30       	cpi	r24, 0x03	; 3
 2aa:	a9 f0       	breq	.+42     	; 0x2d6 <main+0x4c>
 2ac:	84 30       	cpi	r24, 0x04	; 4
 2ae:	89 f7       	brne	.-30     	; 0x292 <main+0x8>
		{
		
		
		case 4:
			OCHOSEGMENTOS(2,B,0);
 2b0:	40 e0       	ldi	r20, 0x00	; 0
 2b2:	61 e0       	ldi	r22, 0x01	; 1
 2b4:	82 e0       	ldi	r24, 0x02	; 2
 2b6:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <OCHOSEGMENTOS>
 2ba:	8f e3       	ldi	r24, 0x3F	; 63
 2bc:	9c e9       	ldi	r25, 0x9C	; 156
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	f1 f7       	brne	.-4      	; 0x2be <main+0x34>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <main+0x3a>
 2c4:	00 00       	nop
			_delay_ms(10);
			PORTB &= ~(1<<PORTB0);
 2c6:	85 b1       	in	r24, 0x05	; 5
 2c8:	8e 7f       	andi	r24, 0xFE	; 254
 2ca:	85 b9       	out	0x05, r24	; 5
			Jug1LED();
 2cc:	0e 94 77 00 	call	0xee	; 0xee <Jug1LED>
			Jug2LED();
 2d0:	0e 94 de 00 	call	0x1bc	; 0x1bc <Jug2LED>
				break;
 2d4:	de cf       	rjmp	.-68     	; 0x292 <main+0x8>
		case 3:
			OCHOSEGMENTOS(1,B,0);
 2d6:	40 e0       	ldi	r20, 0x00	; 0
 2d8:	61 e0       	ldi	r22, 0x01	; 1
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <OCHOSEGMENTOS>
 2e0:	8f e3       	ldi	r24, 0x3F	; 63
 2e2:	9c e9       	ldi	r25, 0x9C	; 156
 2e4:	01 97       	sbiw	r24, 0x01	; 1
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <main+0x5a>
 2e8:	00 c0       	rjmp	.+0      	; 0x2ea <main+0x60>
 2ea:	00 00       	nop
			_delay_ms(10);
			PORTB &= ~(1<<PORTB0);
 2ec:	85 b1       	in	r24, 0x05	; 5
 2ee:	8e 7f       	andi	r24, 0xFE	; 254
 2f0:	85 b9       	out	0x05, r24	; 5
			Jug1LED();
 2f2:	0e 94 77 00 	call	0xee	; 0xee <Jug1LED>
			Jug2LED();
 2f6:	0e 94 de 00 	call	0x1bc	; 0x1bc <Jug2LED>
			break;
 2fa:	cb cf       	rjmp	.-106    	; 0x292 <main+0x8>
		case 2:
			OCHOSEGMENTOS(0,B,0);
 2fc:	40 e0       	ldi	r20, 0x00	; 0
 2fe:	61 e0       	ldi	r22, 0x01	; 1
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <OCHOSEGMENTOS>
 306:	8f e1       	ldi	r24, 0x1F	; 31
 308:	9e e4       	ldi	r25, 0x4E	; 78
 30a:	01 97       	sbiw	r24, 0x01	; 1
 30c:	f1 f7       	brne	.-4      	; 0x30a <main+0x80>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <main+0x86>
 310:	00 00       	nop
			_delay_ms(5);
			PORTB &= ~(1<<PORTB1);
 312:	85 b1       	in	r24, 0x05	; 5
 314:	8d 7f       	andi	r24, 0xFD	; 253
 316:	85 b9       	out	0x05, r24	; 5
			Jug1LED();
 318:	0e 94 77 00 	call	0xee	; 0xee <Jug1LED>
			Jug2LED();
 31c:	0e 94 de 00 	call	0x1bc	; 0x1bc <Jug2LED>
			break;
 320:	b8 cf       	rjmp	.-144    	; 0x292 <main+0x8>
		case 1:
			OCHOSEGMENTOS(5, B, 0);
 322:	40 e0       	ldi	r20, 0x00	; 0
 324:	61 e0       	ldi	r22, 0x01	; 1
 326:	85 e0       	ldi	r24, 0x05	; 5
 328:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <OCHOSEGMENTOS>
 32c:	9f ef       	ldi	r25, 0xFF	; 255
 32e:	23 ed       	ldi	r18, 0xD3	; 211
 330:	80 e3       	ldi	r24, 0x30	; 48
 332:	91 50       	subi	r25, 0x01	; 1
 334:	20 40       	sbci	r18, 0x00	; 0
 336:	80 40       	sbci	r24, 0x00	; 0
 338:	e1 f7       	brne	.-8      	; 0x332 <main+0xa8>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <main+0xb2>
 33c:	00 00       	nop
				_delay_ms(1000);
			OCHOSEGMENTOS(4, B, 0);
 33e:	40 e0       	ldi	r20, 0x00	; 0
 340:	61 e0       	ldi	r22, 0x01	; 1
 342:	84 e0       	ldi	r24, 0x04	; 4
 344:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <OCHOSEGMENTOS>
 348:	9f ef       	ldi	r25, 0xFF	; 255
 34a:	23 ed       	ldi	r18, 0xD3	; 211
 34c:	80 e3       	ldi	r24, 0x30	; 48
 34e:	91 50       	subi	r25, 0x01	; 1
 350:	20 40       	sbci	r18, 0x00	; 0
 352:	80 40       	sbci	r24, 0x00	; 0
 354:	e1 f7       	brne	.-8      	; 0x34e <main+0xc4>
 356:	00 c0       	rjmp	.+0      	; 0x358 <main+0xce>
 358:	00 00       	nop
				_delay_ms(1000);
			OCHOSEGMENTOS(3, B, 0);
 35a:	40 e0       	ldi	r20, 0x00	; 0
 35c:	61 e0       	ldi	r22, 0x01	; 1
 35e:	83 e0       	ldi	r24, 0x03	; 3
 360:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <OCHOSEGMENTOS>
 364:	9f ef       	ldi	r25, 0xFF	; 255
 366:	23 ed       	ldi	r18, 0xD3	; 211
 368:	80 e3       	ldi	r24, 0x30	; 48
 36a:	91 50       	subi	r25, 0x01	; 1
 36c:	20 40       	sbci	r18, 0x00	; 0
 36e:	80 40       	sbci	r24, 0x00	; 0
 370:	e1 f7       	brne	.-8      	; 0x36a <main+0xe0>
 372:	00 c0       	rjmp	.+0      	; 0x374 <main+0xea>
 374:	00 00       	nop
				_delay_ms(1000);
			OCHOSEGMENTOS(2, B, 0);
 376:	40 e0       	ldi	r20, 0x00	; 0
 378:	61 e0       	ldi	r22, 0x01	; 1
 37a:	82 e0       	ldi	r24, 0x02	; 2
 37c:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <OCHOSEGMENTOS>
 380:	9f ef       	ldi	r25, 0xFF	; 255
 382:	23 ed       	ldi	r18, 0xD3	; 211
 384:	80 e3       	ldi	r24, 0x30	; 48
 386:	91 50       	subi	r25, 0x01	; 1
 388:	20 40       	sbci	r18, 0x00	; 0
 38a:	80 40       	sbci	r24, 0x00	; 0
 38c:	e1 f7       	brne	.-8      	; 0x386 <main+0xfc>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <main+0x106>
 390:	00 00       	nop
				_delay_ms(1000);
			OCHOSEGMENTOS(1, B, 0);
 392:	40 e0       	ldi	r20, 0x00	; 0
 394:	61 e0       	ldi	r22, 0x01	; 1
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <OCHOSEGMENTOS>
 39c:	9f ef       	ldi	r25, 0xFF	; 255
 39e:	23 ed       	ldi	r18, 0xD3	; 211
 3a0:	80 e3       	ldi	r24, 0x30	; 48
 3a2:	91 50       	subi	r25, 0x01	; 1
 3a4:	20 40       	sbci	r18, 0x00	; 0
 3a6:	80 40       	sbci	r24, 0x00	; 0
 3a8:	e1 f7       	brne	.-8      	; 0x3a2 <main+0x118>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <main+0x122>
 3ac:	00 00       	nop
				_delay_ms(1000);
			OCHOSEGMENTOS(0, B, 0);
 3ae:	40 e0       	ldi	r20, 0x00	; 0
 3b0:	61 e0       	ldi	r22, 0x01	; 1
 3b2:	80 e0       	ldi	r24, 0x00	; 0
 3b4:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <OCHOSEGMENTOS>
 3b8:	9f ef       	ldi	r25, 0xFF	; 255
 3ba:	23 ed       	ldi	r18, 0xD3	; 211
 3bc:	80 e3       	ldi	r24, 0x30	; 48
 3be:	91 50       	subi	r25, 0x01	; 1
 3c0:	20 40       	sbci	r18, 0x00	; 0
 3c2:	80 40       	sbci	r24, 0x00	; 0
 3c4:	e1 f7       	brne	.-8      	; 0x3be <main+0x134>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <main+0x13e>
 3c8:	00 00       	nop
				_delay_ms(1000);
			Menu=2;
 3ca:	82 e0       	ldi	r24, 0x02	; 2
 3cc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Menu>
			Jg1=0;
 3d0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <Jg1>
			Jg2=0;
 3d4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
			break;
 3d8:	5c cf       	rjmp	.-328    	; 0x292 <main+0x8>
		case 0:
			OCHOSEGMENTOS(8,B,0);
 3da:	40 e0       	ldi	r20, 0x00	; 0
 3dc:	61 e0       	ldi	r22, 0x01	; 1
 3de:	88 e0       	ldi	r24, 0x08	; 8
 3e0:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <OCHOSEGMENTOS>
			break;
 3e4:	56 cf       	rjmp	.-340    	; 0x292 <main+0x8>

000003e6 <__vector_4>:
/*
	------------------------------------------------------
	INTERRUPCIONES
	------------------------------------------------------
*/
ISR(PCINT1_vect){
 3e6:	1f 92       	push	r1
 3e8:	0f 92       	push	r0
 3ea:	0f b6       	in	r0, 0x3f	; 63
 3ec:	0f 92       	push	r0
 3ee:	11 24       	eor	r1, r1
 3f0:	8f 93       	push	r24
	if (Menu!=2)
 3f2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Menu>
 3f6:	82 30       	cpi	r24, 0x02	; 2
 3f8:	29 f0       	breq	.+10     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
	{
		if ((((PINC) & (1<<PINC0)) != (1<<PINC0)))
 3fa:	30 99       	sbic	0x06, 0	; 6
 3fc:	03 c0       	rjmp	.+6      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
		{
			Menu=1;
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Menu>
		}
	}
	if (Menu == 2){
 404:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Menu>
 408:	82 30       	cpi	r24, 0x02	; 2
 40a:	d9 f4       	brne	.+54     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
		if (((PINC) & (1<<PINC1)) != (1<<PINC1))
 40c:	31 99       	sbic	0x06, 1	; 6
 40e:	0c c0       	rjmp	.+24     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
		{
			Jg1++;
 410:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <Jg1>
 414:	8f 5f       	subi	r24, 0xFF	; 255
 416:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Jg1>
			if (Jg1==4)
 41a:	84 30       	cpi	r24, 0x04	; 4
 41c:	29 f4       	brne	.+10     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
			{	
				Jg2=0;
 41e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
				Menu=3;
 422:	83 e0       	ldi	r24, 0x03	; 3
 424:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Menu>
			}
		}
		if (((PINC) & (1<<PINC2)) != (1<<PINC2))
 428:	32 99       	sbic	0x06, 2	; 6
 42a:	0b c0       	rjmp	.+22     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
		{
			Jg2++;
 42c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 430:	8f 5f       	subi	r24, 0xFF	; 255
 432:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			if (Jg2==4)
 436:	84 30       	cpi	r24, 0x04	; 4
 438:	21 f4       	brne	.+8      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
			{
				Jg1=0;
 43a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <Jg1>
				Menu=4;
 43e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Menu>
			}
		}
	}
	PCIFR|=(1<<PCIF1);
 442:	8b b3       	in	r24, 0x1b	; 27
 444:	82 60       	ori	r24, 0x02	; 2
 446:	8b bb       	out	0x1b, r24	; 27
}
 448:	8f 91       	pop	r24
 44a:	0f 90       	pop	r0
 44c:	0f be       	out	0x3f, r0	; 63
 44e:	0f 90       	pop	r0
 450:	1f 90       	pop	r1
 452:	18 95       	reti

00000454 <SetupEntrada>:
 *  Author: PC
 */ 
#include "SetupsMicro.h"

void SetupEntrada(uint8_t PuertoEntrada, uint8_t PinEntrada){
	if (PuertoEntrada == Todo)
 454:	84 30       	cpi	r24, 0x04	; 4
 456:	71 f5       	brne	.+92     	; 0x4b4 <SetupEntrada+0x60>
	{
		switch (PinEntrada)
 458:	62 30       	cpi	r22, 0x02	; 2
 45a:	91 f0       	breq	.+36     	; 0x480 <SetupEntrada+0x2c>
 45c:	63 30       	cpi	r22, 0x03	; 3
 45e:	e9 f0       	breq	.+58     	; 0x49a <SetupEntrada+0x46>
 460:	61 30       	cpi	r22, 0x01	; 1
 462:	09 f0       	breq	.+2      	; 0x466 <SetupEntrada+0x12>
 464:	55 c1       	rjmp	.+682    	; 0x710 <SetupEntrada+0x2bc>
		{
			case B:
			DDRB = 0;
 466:	14 b8       	out	0x04, r1	; 4
			PORTB = 0xFF;
 468:	9f ef       	ldi	r25, 0xFF	; 255
 46a:	95 b9       	out	0x05, r25	; 5
			PCICR |= (1<<PCIE0);
 46c:	e8 e6       	ldi	r30, 0x68	; 104
 46e:	f0 e0       	ldi	r31, 0x00	; 0
 470:	80 81       	ld	r24, Z
 472:	81 60       	ori	r24, 0x01	; 1
 474:	80 83       	st	Z, r24
			PCMSK0 |= 0xFF;
 476:	eb e6       	ldi	r30, 0x6B	; 107
 478:	f0 e0       	ldi	r31, 0x00	; 0
 47a:	80 81       	ld	r24, Z
 47c:	90 83       	st	Z, r25
			break;
 47e:	08 95       	ret
			case C:
			DDRC = 0;
 480:	17 b8       	out	0x07, r1	; 7
			PORTC = 0xFF;
 482:	9f ef       	ldi	r25, 0xFF	; 255
 484:	98 b9       	out	0x08, r25	; 8
			PCICR |= (1<<PCIE1);
 486:	e8 e6       	ldi	r30, 0x68	; 104
 488:	f0 e0       	ldi	r31, 0x00	; 0
 48a:	80 81       	ld	r24, Z
 48c:	82 60       	ori	r24, 0x02	; 2
 48e:	80 83       	st	Z, r24
			PCMSK1 |= 0xFF;
 490:	ec e6       	ldi	r30, 0x6C	; 108
 492:	f0 e0       	ldi	r31, 0x00	; 0
 494:	80 81       	ld	r24, Z
 496:	90 83       	st	Z, r25
			break;
 498:	08 95       	ret
			case D:
			DDRD = 0;
 49a:	1a b8       	out	0x0a, r1	; 10
			PORTD = 0xFF;
 49c:	9f ef       	ldi	r25, 0xFF	; 255
 49e:	9b b9       	out	0x0b, r25	; 11
			PCICR |= (1<<PCIE2);
 4a0:	e8 e6       	ldi	r30, 0x68	; 104
 4a2:	f0 e0       	ldi	r31, 0x00	; 0
 4a4:	80 81       	ld	r24, Z
 4a6:	84 60       	ori	r24, 0x04	; 4
 4a8:	80 83       	st	Z, r24
			PCMSK2 |= 0xFF;
 4aa:	ed e6       	ldi	r30, 0x6D	; 109
 4ac:	f0 e0       	ldi	r31, 0x00	; 0
 4ae:	80 81       	ld	r24, Z
 4b0:	90 83       	st	Z, r25
			break;
 4b2:	08 95       	ret
			default: break;
		}
	}
	else if (PuertoEntrada == B)
 4b4:	81 30       	cpi	r24, 0x01	; 1
 4b6:	09 f0       	breq	.+2      	; 0x4ba <SetupEntrada+0x66>
 4b8:	5b c0       	rjmp	.+182    	; 0x570 <SetupEntrada+0x11c>
	{
		PCICR |= (1<<PCIE0);
 4ba:	a8 e6       	ldi	r26, 0x68	; 104
 4bc:	b0 e0       	ldi	r27, 0x00	; 0
 4be:	8c 91       	ld	r24, X
 4c0:	81 60       	ori	r24, 0x01	; 1
 4c2:	8c 93       	st	X, r24
		switch (PinEntrada) {
 4c4:	62 30       	cpi	r22, 0x02	; 2
 4c6:	21 f1       	breq	.+72     	; 0x510 <SetupEntrada+0xbc>
 4c8:	28 f4       	brcc	.+10     	; 0x4d4 <SetupEntrada+0x80>
 4ca:	66 23       	and	r22, r22
 4cc:	49 f0       	breq	.+18     	; 0x4e0 <SetupEntrada+0x8c>
 4ce:	61 30       	cpi	r22, 0x01	; 1
 4d0:	99 f0       	breq	.+38     	; 0x4f8 <SetupEntrada+0xa4>
 4d2:	08 95       	ret
 4d4:	64 30       	cpi	r22, 0x04	; 4
 4d6:	a1 f1       	breq	.+104    	; 0x540 <SetupEntrada+0xec>
 4d8:	38 f1       	brcs	.+78     	; 0x528 <SetupEntrada+0xd4>
 4da:	65 30       	cpi	r22, 0x05	; 5
 4dc:	e9 f1       	breq	.+122    	; 0x558 <SetupEntrada+0x104>
 4de:	08 95       	ret
			case PINB0:
				DDRB &= ~(1<<PINB0);
 4e0:	84 b1       	in	r24, 0x04	; 4
 4e2:	8e 7f       	andi	r24, 0xFE	; 254
 4e4:	84 b9       	out	0x04, r24	; 4
				PORTB |= (1<<PINB0);
 4e6:	85 b1       	in	r24, 0x05	; 5
 4e8:	81 60       	ori	r24, 0x01	; 1
 4ea:	85 b9       	out	0x05, r24	; 5
				PCMSK0 |= (1<<PCINT0);
 4ec:	eb e6       	ldi	r30, 0x6B	; 107
 4ee:	f0 e0       	ldi	r31, 0x00	; 0
 4f0:	80 81       	ld	r24, Z
 4f2:	81 60       	ori	r24, 0x01	; 1
 4f4:	80 83       	st	Z, r24
				break;
 4f6:	08 95       	ret
			case PINB1:
				DDRB &= ~(1<<PINB1);
 4f8:	84 b1       	in	r24, 0x04	; 4
 4fa:	8d 7f       	andi	r24, 0xFD	; 253
 4fc:	84 b9       	out	0x04, r24	; 4
				PORTB |= (1<<PINB1);
 4fe:	85 b1       	in	r24, 0x05	; 5
 500:	82 60       	ori	r24, 0x02	; 2
 502:	85 b9       	out	0x05, r24	; 5
				PCMSK0 |= (1<<PCINT1);
 504:	eb e6       	ldi	r30, 0x6B	; 107
 506:	f0 e0       	ldi	r31, 0x00	; 0
 508:	80 81       	ld	r24, Z
 50a:	82 60       	ori	r24, 0x02	; 2
 50c:	80 83       	st	Z, r24
				break;
 50e:	08 95       	ret
			case PINB2:
				DDRB &= ~(1<<PINB2);
 510:	84 b1       	in	r24, 0x04	; 4
 512:	8b 7f       	andi	r24, 0xFB	; 251
 514:	84 b9       	out	0x04, r24	; 4
				PORTB |= (1<<PINB2);
 516:	85 b1       	in	r24, 0x05	; 5
 518:	84 60       	ori	r24, 0x04	; 4
 51a:	85 b9       	out	0x05, r24	; 5
				PCMSK0 |= (1<<PCINT2);
 51c:	eb e6       	ldi	r30, 0x6B	; 107
 51e:	f0 e0       	ldi	r31, 0x00	; 0
 520:	80 81       	ld	r24, Z
 522:	84 60       	ori	r24, 0x04	; 4
 524:	80 83       	st	Z, r24
				break;
 526:	08 95       	ret
			case PINB3:
				DDRB &= ~(1<<PINB3);
 528:	84 b1       	in	r24, 0x04	; 4
 52a:	87 7f       	andi	r24, 0xF7	; 247
 52c:	84 b9       	out	0x04, r24	; 4
				PORTB |= (1<<PINB3);
 52e:	85 b1       	in	r24, 0x05	; 5
 530:	88 60       	ori	r24, 0x08	; 8
 532:	85 b9       	out	0x05, r24	; 5
				PCMSK0 |= (1<<PCINT3);
 534:	eb e6       	ldi	r30, 0x6B	; 107
 536:	f0 e0       	ldi	r31, 0x00	; 0
 538:	80 81       	ld	r24, Z
 53a:	88 60       	ori	r24, 0x08	; 8
 53c:	80 83       	st	Z, r24
				break;
 53e:	08 95       	ret
			case PINB4:
				DDRB &= ~(1<<PINB4);
 540:	84 b1       	in	r24, 0x04	; 4
 542:	8f 7e       	andi	r24, 0xEF	; 239
 544:	84 b9       	out	0x04, r24	; 4
				PORTB |= (1<<PINB4);
 546:	85 b1       	in	r24, 0x05	; 5
 548:	80 61       	ori	r24, 0x10	; 16
 54a:	85 b9       	out	0x05, r24	; 5
				PCMSK0 |= (1<<PCINT4);
 54c:	eb e6       	ldi	r30, 0x6B	; 107
 54e:	f0 e0       	ldi	r31, 0x00	; 0
 550:	80 81       	ld	r24, Z
 552:	80 61       	ori	r24, 0x10	; 16
 554:	80 83       	st	Z, r24
				break;
 556:	08 95       	ret
			case PINB5:
				DDRB &= ~(1<<PINB5);
 558:	84 b1       	in	r24, 0x04	; 4
 55a:	8f 7d       	andi	r24, 0xDF	; 223
 55c:	84 b9       	out	0x04, r24	; 4
				PORTB |= (1<<PORTB5);
 55e:	85 b1       	in	r24, 0x05	; 5
 560:	80 62       	ori	r24, 0x20	; 32
 562:	85 b9       	out	0x05, r24	; 5
				PCMSK0 |= (1<<PCINT5);
 564:	eb e6       	ldi	r30, 0x6B	; 107
 566:	f0 e0       	ldi	r31, 0x00	; 0
 568:	80 81       	ld	r24, Z
 56a:	80 62       	ori	r24, 0x20	; 32
 56c:	80 83       	st	Z, r24
				break;
 56e:	08 95       	ret
			default:
				break;
		}
	}
	else if (PuertoEntrada == C)
 570:	82 30       	cpi	r24, 0x02	; 2
 572:	09 f0       	breq	.+2      	; 0x576 <SetupEntrada+0x122>
 574:	5b c0       	rjmp	.+182    	; 0x62c <SetupEntrada+0x1d8>
	{
		PCICR |= (1<<PCIE1);
 576:	a8 e6       	ldi	r26, 0x68	; 104
 578:	b0 e0       	ldi	r27, 0x00	; 0
 57a:	8c 91       	ld	r24, X
 57c:	82 60       	ori	r24, 0x02	; 2
 57e:	8c 93       	st	X, r24
		switch (PinEntrada) {
 580:	62 30       	cpi	r22, 0x02	; 2
 582:	21 f1       	breq	.+72     	; 0x5cc <SetupEntrada+0x178>
 584:	28 f4       	brcc	.+10     	; 0x590 <SetupEntrada+0x13c>
 586:	66 23       	and	r22, r22
 588:	49 f0       	breq	.+18     	; 0x59c <SetupEntrada+0x148>
 58a:	61 30       	cpi	r22, 0x01	; 1
 58c:	99 f0       	breq	.+38     	; 0x5b4 <SetupEntrada+0x160>
 58e:	08 95       	ret
 590:	64 30       	cpi	r22, 0x04	; 4
 592:	a1 f1       	breq	.+104    	; 0x5fc <SetupEntrada+0x1a8>
 594:	38 f1       	brcs	.+78     	; 0x5e4 <SetupEntrada+0x190>
 596:	65 30       	cpi	r22, 0x05	; 5
 598:	e9 f1       	breq	.+122    	; 0x614 <SetupEntrada+0x1c0>
 59a:	08 95       	ret
			case PC0:
			DDRC &= ~(1<<PC0);
 59c:	87 b1       	in	r24, 0x07	; 7
 59e:	8e 7f       	andi	r24, 0xFE	; 254
 5a0:	87 b9       	out	0x07, r24	; 7
			PORTC |= (1<<PC0);
 5a2:	88 b1       	in	r24, 0x08	; 8
 5a4:	81 60       	ori	r24, 0x01	; 1
 5a6:	88 b9       	out	0x08, r24	; 8
			PCMSK1 |= (1<<PCINT8);
 5a8:	ec e6       	ldi	r30, 0x6C	; 108
 5aa:	f0 e0       	ldi	r31, 0x00	; 0
 5ac:	80 81       	ld	r24, Z
 5ae:	81 60       	ori	r24, 0x01	; 1
 5b0:	80 83       	st	Z, r24
			break;
 5b2:	08 95       	ret
			case PC1:
			DDRC &= ~(1<<PC1);
 5b4:	87 b1       	in	r24, 0x07	; 7
 5b6:	8d 7f       	andi	r24, 0xFD	; 253
 5b8:	87 b9       	out	0x07, r24	; 7
			PORTC |= (1<<PC1);
 5ba:	88 b1       	in	r24, 0x08	; 8
 5bc:	82 60       	ori	r24, 0x02	; 2
 5be:	88 b9       	out	0x08, r24	; 8
			PCMSK1 |= (1<<PCINT9);
 5c0:	ec e6       	ldi	r30, 0x6C	; 108
 5c2:	f0 e0       	ldi	r31, 0x00	; 0
 5c4:	80 81       	ld	r24, Z
 5c6:	82 60       	ori	r24, 0x02	; 2
 5c8:	80 83       	st	Z, r24
			break;
 5ca:	08 95       	ret
			case PC2:
			DDRC &= ~(1<<PC2);
 5cc:	87 b1       	in	r24, 0x07	; 7
 5ce:	8b 7f       	andi	r24, 0xFB	; 251
 5d0:	87 b9       	out	0x07, r24	; 7
			PORTC |= (1<<PC2);
 5d2:	88 b1       	in	r24, 0x08	; 8
 5d4:	84 60       	ori	r24, 0x04	; 4
 5d6:	88 b9       	out	0x08, r24	; 8
			PCMSK1 |= (1<<PCINT10);
 5d8:	ec e6       	ldi	r30, 0x6C	; 108
 5da:	f0 e0       	ldi	r31, 0x00	; 0
 5dc:	80 81       	ld	r24, Z
 5de:	84 60       	ori	r24, 0x04	; 4
 5e0:	80 83       	st	Z, r24
			break;
 5e2:	08 95       	ret
			case PC3:
			DDRC &= ~(1<<PC3);
 5e4:	87 b1       	in	r24, 0x07	; 7
 5e6:	87 7f       	andi	r24, 0xF7	; 247
 5e8:	87 b9       	out	0x07, r24	; 7
			PORTC |= (1<<PC3);
 5ea:	88 b1       	in	r24, 0x08	; 8
 5ec:	88 60       	ori	r24, 0x08	; 8
 5ee:	88 b9       	out	0x08, r24	; 8
			PCMSK1 |= (1<<PCINT11);
 5f0:	ec e6       	ldi	r30, 0x6C	; 108
 5f2:	f0 e0       	ldi	r31, 0x00	; 0
 5f4:	80 81       	ld	r24, Z
 5f6:	88 60       	ori	r24, 0x08	; 8
 5f8:	80 83       	st	Z, r24
			break;
 5fa:	08 95       	ret
			case PC4:
			DDRC &= ~(1<<PC4);
 5fc:	87 b1       	in	r24, 0x07	; 7
 5fe:	8f 7e       	andi	r24, 0xEF	; 239
 600:	87 b9       	out	0x07, r24	; 7
			PORTC |= (1<<PC4);
 602:	88 b1       	in	r24, 0x08	; 8
 604:	80 61       	ori	r24, 0x10	; 16
 606:	88 b9       	out	0x08, r24	; 8
			PCMSK1 |= (1<<PCINT12);
 608:	ec e6       	ldi	r30, 0x6C	; 108
 60a:	f0 e0       	ldi	r31, 0x00	; 0
 60c:	80 81       	ld	r24, Z
 60e:	80 61       	ori	r24, 0x10	; 16
 610:	80 83       	st	Z, r24
			break;
 612:	08 95       	ret
			case PC5:
			DDRC &= ~(1<<PC5);
 614:	87 b1       	in	r24, 0x07	; 7
 616:	8f 7d       	andi	r24, 0xDF	; 223
 618:	87 b9       	out	0x07, r24	; 7
			PORTC |= (1<<PC5);
 61a:	88 b1       	in	r24, 0x08	; 8
 61c:	80 62       	ori	r24, 0x20	; 32
 61e:	88 b9       	out	0x08, r24	; 8
			PCMSK1 |= (1<<PCINT13);
 620:	ec e6       	ldi	r30, 0x6C	; 108
 622:	f0 e0       	ldi	r31, 0x00	; 0
 624:	80 81       	ld	r24, Z
 626:	80 62       	ori	r24, 0x20	; 32
 628:	80 83       	st	Z, r24
			break;
 62a:	08 95       	ret
			default: break;
		}
	}
	else if (PuertoEntrada == D)
 62c:	83 30       	cpi	r24, 0x03	; 3
 62e:	09 f0       	breq	.+2      	; 0x632 <SetupEntrada+0x1de>
 630:	6f c0       	rjmp	.+222    	; 0x710 <SetupEntrada+0x2bc>
	{
		PCICR |= (1<<PCIE2);
 632:	a8 e6       	ldi	r26, 0x68	; 104
 634:	b0 e0       	ldi	r27, 0x00	; 0
 636:	8c 91       	ld	r24, X
 638:	84 60       	ori	r24, 0x04	; 4
 63a:	8c 93       	st	X, r24
		switch (PinEntrada) {
 63c:	86 2f       	mov	r24, r22
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	88 30       	cpi	r24, 0x08	; 8
 642:	91 05       	cpc	r25, r1
 644:	08 f0       	brcs	.+2      	; 0x648 <SetupEntrada+0x1f4>
 646:	64 c0       	rjmp	.+200    	; 0x710 <SetupEntrada+0x2bc>
 648:	fc 01       	movw	r30, r24
 64a:	ec 5c       	subi	r30, 0xCC	; 204
 64c:	ff 4f       	sbci	r31, 0xFF	; 255
 64e:	0c 94 03 05 	jmp	0xa06	; 0xa06 <__tablejump2__>
			case PD0:
			DDRD &= ~(1<<PD0);
 652:	8a b1       	in	r24, 0x0a	; 10
 654:	8e 7f       	andi	r24, 0xFE	; 254
 656:	8a b9       	out	0x0a, r24	; 10
			PORTD |= (1<<PD0);
 658:	8b b1       	in	r24, 0x0b	; 11
 65a:	81 60       	ori	r24, 0x01	; 1
 65c:	8b b9       	out	0x0b, r24	; 11
			PCMSK2 |= (1<<PCINT16);
 65e:	ed e6       	ldi	r30, 0x6D	; 109
 660:	f0 e0       	ldi	r31, 0x00	; 0
 662:	80 81       	ld	r24, Z
 664:	81 60       	ori	r24, 0x01	; 1
 666:	80 83       	st	Z, r24
			break;
 668:	08 95       	ret
			case PD1:
			DDRD &= ~(1<<PD1);
 66a:	8a b1       	in	r24, 0x0a	; 10
 66c:	8d 7f       	andi	r24, 0xFD	; 253
 66e:	8a b9       	out	0x0a, r24	; 10
			PORTD |= (1<<PD1);
 670:	8b b1       	in	r24, 0x0b	; 11
 672:	82 60       	ori	r24, 0x02	; 2
 674:	8b b9       	out	0x0b, r24	; 11
			PCMSK2 |= (1<<PCINT17);
 676:	ed e6       	ldi	r30, 0x6D	; 109
 678:	f0 e0       	ldi	r31, 0x00	; 0
 67a:	80 81       	ld	r24, Z
 67c:	82 60       	ori	r24, 0x02	; 2
 67e:	80 83       	st	Z, r24
			break;
 680:	08 95       	ret
			case PD2:
			DDRD &= ~(1<<PD2);
 682:	8a b1       	in	r24, 0x0a	; 10
 684:	8b 7f       	andi	r24, 0xFB	; 251
 686:	8a b9       	out	0x0a, r24	; 10
			PORTD |= (1<<PD2);
 688:	8b b1       	in	r24, 0x0b	; 11
 68a:	84 60       	ori	r24, 0x04	; 4
 68c:	8b b9       	out	0x0b, r24	; 11
			PCMSK2 |= (1<<PCINT18);
 68e:	ed e6       	ldi	r30, 0x6D	; 109
 690:	f0 e0       	ldi	r31, 0x00	; 0
 692:	80 81       	ld	r24, Z
 694:	84 60       	ori	r24, 0x04	; 4
 696:	80 83       	st	Z, r24
			break;
 698:	08 95       	ret
			case PD3:
			DDRD &= ~(1<<PD3);
 69a:	8a b1       	in	r24, 0x0a	; 10
 69c:	87 7f       	andi	r24, 0xF7	; 247
 69e:	8a b9       	out	0x0a, r24	; 10
			PORTD |= (1<<PD3);
 6a0:	8b b1       	in	r24, 0x0b	; 11
 6a2:	88 60       	ori	r24, 0x08	; 8
 6a4:	8b b9       	out	0x0b, r24	; 11
			PCMSK2 |= (1<<PCINT19);
 6a6:	ed e6       	ldi	r30, 0x6D	; 109
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	80 81       	ld	r24, Z
 6ac:	88 60       	ori	r24, 0x08	; 8
 6ae:	80 83       	st	Z, r24
			break;
 6b0:	08 95       	ret
			case PD4:
			DDRD &= ~(1<<PD4);
 6b2:	8a b1       	in	r24, 0x0a	; 10
 6b4:	8f 7e       	andi	r24, 0xEF	; 239
 6b6:	8a b9       	out	0x0a, r24	; 10
			PORTD |= (1<<PD4);
 6b8:	8b b1       	in	r24, 0x0b	; 11
 6ba:	80 61       	ori	r24, 0x10	; 16
 6bc:	8b b9       	out	0x0b, r24	; 11
			PCMSK2 |= (1<<PCINT20);
 6be:	ed e6       	ldi	r30, 0x6D	; 109
 6c0:	f0 e0       	ldi	r31, 0x00	; 0
 6c2:	80 81       	ld	r24, Z
 6c4:	80 61       	ori	r24, 0x10	; 16
 6c6:	80 83       	st	Z, r24
			break;
 6c8:	08 95       	ret
			case PD5:
			DDRD &= ~(1<<PD5);
 6ca:	8a b1       	in	r24, 0x0a	; 10
 6cc:	8f 7d       	andi	r24, 0xDF	; 223
 6ce:	8a b9       	out	0x0a, r24	; 10
			PORTD |= (1<<PD5);
 6d0:	8b b1       	in	r24, 0x0b	; 11
 6d2:	80 62       	ori	r24, 0x20	; 32
 6d4:	8b b9       	out	0x0b, r24	; 11
			PCMSK2 |= (1<<PCINT21);
 6d6:	ed e6       	ldi	r30, 0x6D	; 109
 6d8:	f0 e0       	ldi	r31, 0x00	; 0
 6da:	80 81       	ld	r24, Z
 6dc:	80 62       	ori	r24, 0x20	; 32
 6de:	80 83       	st	Z, r24
			break;
 6e0:	08 95       	ret
			case PD6:
			DDRD &= ~(1<<PD6);
 6e2:	8a b1       	in	r24, 0x0a	; 10
 6e4:	8f 7b       	andi	r24, 0xBF	; 191
 6e6:	8a b9       	out	0x0a, r24	; 10
			PORTD |= (1<<PD6);
 6e8:	8b b1       	in	r24, 0x0b	; 11
 6ea:	80 64       	ori	r24, 0x40	; 64
 6ec:	8b b9       	out	0x0b, r24	; 11
			PCMSK2 |= (1<<PCINT22);
 6ee:	ed e6       	ldi	r30, 0x6D	; 109
 6f0:	f0 e0       	ldi	r31, 0x00	; 0
 6f2:	80 81       	ld	r24, Z
 6f4:	80 64       	ori	r24, 0x40	; 64
 6f6:	80 83       	st	Z, r24
			break;
 6f8:	08 95       	ret
			case PD7:
			DDRD &= ~(1<<PD7);
 6fa:	8a b1       	in	r24, 0x0a	; 10
 6fc:	8f 77       	andi	r24, 0x7F	; 127
 6fe:	8a b9       	out	0x0a, r24	; 10
			PORTD |= (1<<PD7);
 700:	8b b1       	in	r24, 0x0b	; 11
 702:	80 68       	ori	r24, 0x80	; 128
 704:	8b b9       	out	0x0b, r24	; 11
			PCMSK2 |= (1<<PCINT23);
 706:	ed e6       	ldi	r30, 0x6D	; 109
 708:	f0 e0       	ldi	r31, 0x00	; 0
 70a:	80 81       	ld	r24, Z
 70c:	80 68       	ori	r24, 0x80	; 128
 70e:	80 83       	st	Z, r24
 710:	08 95       	ret

00000712 <SetupSalida>:
		}
	}
}

void SetupSalida(uint8_t PuertoSalida ,uint8_t PinSalida){
	UCSR0B = 0x00; 
 712:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	if (PuertoSalida == Todo)
 716:	84 30       	cpi	r24, 0x04	; 4
 718:	a9 f4       	brne	.+42     	; 0x744 <SetupSalida+0x32>
	{
		switch (PinSalida)
 71a:	62 30       	cpi	r22, 0x02	; 2
 71c:	49 f0       	breq	.+18     	; 0x730 <SetupSalida+0x1e>
 71e:	63 30       	cpi	r22, 0x03	; 3
 720:	59 f0       	breq	.+22     	; 0x738 <SetupSalida+0x26>
 722:	61 30       	cpi	r22, 0x01	; 1
 724:	09 f0       	breq	.+2      	; 0x728 <SetupSalida+0x16>
 726:	c6 c0       	rjmp	.+396    	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
		{
			case B:
			DDRB = 0xFF;
 728:	8f ef       	ldi	r24, 0xFF	; 255
 72a:	84 b9       	out	0x04, r24	; 4
			PORTB = 0;
 72c:	15 b8       	out	0x05, r1	; 5
			break;
 72e:	08 95       	ret
			case C:
			DDRC = 0xFF;
 730:	8f ef       	ldi	r24, 0xFF	; 255
 732:	87 b9       	out	0x07, r24	; 7
			PORTC = 0;
 734:	18 b8       	out	0x08, r1	; 8
			break;
 736:	08 95       	ret
			case D:
			DDRD = 0xFF;
 738:	8f ef       	ldi	r24, 0xFF	; 255
 73a:	8a b9       	out	0x0a, r24	; 10
			PORTD = 0;
 73c:	1b b8       	out	0x0b, r1	; 11
			 UCSR0B = 0x00; 
 73e:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
			break;
 742:	08 95       	ret
			default: break;
		}
	}
	else if (PuertoSalida == B)
 744:	81 30       	cpi	r24, 0x01	; 1
 746:	c1 f5       	brne	.+112    	; 0x7b8 <SetupSalida+0xa6>
	{
		switch (PinSalida) {
 748:	62 30       	cpi	r22, 0x02	; 2
 74a:	d1 f0       	breq	.+52     	; 0x780 <SetupSalida+0x6e>
 74c:	28 f4       	brcc	.+10     	; 0x758 <SetupSalida+0x46>
 74e:	66 23       	and	r22, r22
 750:	49 f0       	breq	.+18     	; 0x764 <SetupSalida+0x52>
 752:	61 30       	cpi	r22, 0x01	; 1
 754:	71 f0       	breq	.+28     	; 0x772 <SetupSalida+0x60>
 756:	08 95       	ret
 758:	64 30       	cpi	r22, 0x04	; 4
 75a:	01 f1       	breq	.+64     	; 0x79c <SetupSalida+0x8a>
 75c:	c0 f0       	brcs	.+48     	; 0x78e <SetupSalida+0x7c>
 75e:	65 30       	cpi	r22, 0x05	; 5
 760:	21 f1       	breq	.+72     	; 0x7aa <SetupSalida+0x98>
 762:	08 95       	ret
			case PINB0:
			DDRB |= (1<<PINB0);
 764:	84 b1       	in	r24, 0x04	; 4
 766:	81 60       	ori	r24, 0x01	; 1
 768:	84 b9       	out	0x04, r24	; 4
			PORTB &= ~(1<<PINB0);
 76a:	85 b1       	in	r24, 0x05	; 5
 76c:	8e 7f       	andi	r24, 0xFE	; 254
 76e:	85 b9       	out	0x05, r24	; 5
			break;
 770:	08 95       	ret
			case PINB1:
			DDRB |= (1<<PINB1);
 772:	84 b1       	in	r24, 0x04	; 4
 774:	82 60       	ori	r24, 0x02	; 2
 776:	84 b9       	out	0x04, r24	; 4
			PORTB &= ~(1<<PINB1);
 778:	85 b1       	in	r24, 0x05	; 5
 77a:	8d 7f       	andi	r24, 0xFD	; 253
 77c:	85 b9       	out	0x05, r24	; 5
			break;
 77e:	08 95       	ret
			case PINB2:
			DDRB |= (1<<PINB2);
 780:	84 b1       	in	r24, 0x04	; 4
 782:	84 60       	ori	r24, 0x04	; 4
 784:	84 b9       	out	0x04, r24	; 4
			PORTB &= ~(1<<PINB2);
 786:	85 b1       	in	r24, 0x05	; 5
 788:	8b 7f       	andi	r24, 0xFB	; 251
 78a:	85 b9       	out	0x05, r24	; 5
			break;
 78c:	08 95       	ret
			case PINB3:
			DDRB |= (1<<PINB3);
 78e:	84 b1       	in	r24, 0x04	; 4
 790:	88 60       	ori	r24, 0x08	; 8
 792:	84 b9       	out	0x04, r24	; 4
			PORTB &= ~(1<<PINB3);
 794:	85 b1       	in	r24, 0x05	; 5
 796:	87 7f       	andi	r24, 0xF7	; 247
 798:	85 b9       	out	0x05, r24	; 5
			break;
 79a:	08 95       	ret
			case PINB4:
			DDRB |= (1<<PINB4);
 79c:	84 b1       	in	r24, 0x04	; 4
 79e:	80 61       	ori	r24, 0x10	; 16
 7a0:	84 b9       	out	0x04, r24	; 4
			PORTB &= ~(1<<PINB4);
 7a2:	85 b1       	in	r24, 0x05	; 5
 7a4:	8f 7e       	andi	r24, 0xEF	; 239
 7a6:	85 b9       	out	0x05, r24	; 5
			break;
 7a8:	08 95       	ret
			case PINB5:
			DDRB |= (1<<PINB5);
 7aa:	84 b1       	in	r24, 0x04	; 4
 7ac:	80 62       	ori	r24, 0x20	; 32
 7ae:	84 b9       	out	0x04, r24	; 4
			PORTB &= ~(1<<PINB5);
 7b0:	85 b1       	in	r24, 0x05	; 5
 7b2:	8f 7d       	andi	r24, 0xDF	; 223
 7b4:	85 b9       	out	0x05, r24	; 5
			break;
 7b6:	08 95       	ret
			default:break;
		}
	}
	else if (PuertoSalida == C)
 7b8:	82 30       	cpi	r24, 0x02	; 2
 7ba:	c1 f5       	brne	.+112    	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
	{
		switch (PinSalida) {
 7bc:	62 30       	cpi	r22, 0x02	; 2
 7be:	d1 f0       	breq	.+52     	; 0x7f4 <SetupSalida+0xe2>
 7c0:	28 f4       	brcc	.+10     	; 0x7cc <SetupSalida+0xba>
 7c2:	66 23       	and	r22, r22
 7c4:	49 f0       	breq	.+18     	; 0x7d8 <SetupSalida+0xc6>
 7c6:	61 30       	cpi	r22, 0x01	; 1
 7c8:	71 f0       	breq	.+28     	; 0x7e6 <SetupSalida+0xd4>
 7ca:	08 95       	ret
 7cc:	64 30       	cpi	r22, 0x04	; 4
 7ce:	01 f1       	breq	.+64     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7d0:	c0 f0       	brcs	.+48     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 7d2:	65 30       	cpi	r22, 0x05	; 5
 7d4:	21 f1       	breq	.+72     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 7d6:	08 95       	ret
			case PC0:
			DDRC |= (1<<PC0);
 7d8:	87 b1       	in	r24, 0x07	; 7
 7da:	81 60       	ori	r24, 0x01	; 1
 7dc:	87 b9       	out	0x07, r24	; 7
			PORTC &= ~(1<<PC0);
 7de:	88 b1       	in	r24, 0x08	; 8
 7e0:	8e 7f       	andi	r24, 0xFE	; 254
 7e2:	88 b9       	out	0x08, r24	; 8
			break;
 7e4:	08 95       	ret
			case PC1:
			DDRC |= (1<<PC1);
 7e6:	87 b1       	in	r24, 0x07	; 7
 7e8:	82 60       	ori	r24, 0x02	; 2
 7ea:	87 b9       	out	0x07, r24	; 7
			PORTC &= ~(1<<PC1);
 7ec:	88 b1       	in	r24, 0x08	; 8
 7ee:	8d 7f       	andi	r24, 0xFD	; 253
 7f0:	88 b9       	out	0x08, r24	; 8
			break;
 7f2:	08 95       	ret
			case PC2:
			DDRC |= (1<<PC2);
 7f4:	87 b1       	in	r24, 0x07	; 7
 7f6:	84 60       	ori	r24, 0x04	; 4
 7f8:	87 b9       	out	0x07, r24	; 7
			PORTC &= ~(1<<PC2);
 7fa:	88 b1       	in	r24, 0x08	; 8
 7fc:	8b 7f       	andi	r24, 0xFB	; 251
 7fe:	88 b9       	out	0x08, r24	; 8
			break;
 800:	08 95       	ret
			case PC3:
			DDRC |= (1<<PC3);
 802:	87 b1       	in	r24, 0x07	; 7
 804:	88 60       	ori	r24, 0x08	; 8
 806:	87 b9       	out	0x07, r24	; 7
			PORTC &= ~(1<<PC3);
 808:	88 b1       	in	r24, 0x08	; 8
 80a:	87 7f       	andi	r24, 0xF7	; 247
 80c:	88 b9       	out	0x08, r24	; 8
			break;
 80e:	08 95       	ret
			case PC4:
			DDRC |= (1<<PC4);
 810:	87 b1       	in	r24, 0x07	; 7
 812:	80 61       	ori	r24, 0x10	; 16
 814:	87 b9       	out	0x07, r24	; 7
			PORTC &= ~(1<<PC4);
 816:	88 b1       	in	r24, 0x08	; 8
 818:	8f 7e       	andi	r24, 0xEF	; 239
 81a:	88 b9       	out	0x08, r24	; 8
			break;
 81c:	08 95       	ret
			case PC5:
			DDRC |= (1<<PC5);
 81e:	87 b1       	in	r24, 0x07	; 7
 820:	80 62       	ori	r24, 0x20	; 32
 822:	87 b9       	out	0x07, r24	; 7
			PORTC &= ~(1<<PC5);
 824:	88 b1       	in	r24, 0x08	; 8
 826:	8f 7d       	andi	r24, 0xDF	; 223
 828:	88 b9       	out	0x08, r24	; 8
			break;
 82a:	08 95       	ret
			default:break;
		}
	}
	else if (PuertoSalida == D)
 82c:	83 30       	cpi	r24, 0x03	; 3
 82e:	09 f0       	breq	.+2      	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 830:	41 c0       	rjmp	.+130    	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
	{
		switch (PinSalida) {
 832:	86 2f       	mov	r24, r22
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	88 30       	cpi	r24, 0x08	; 8
 838:	91 05       	cpc	r25, r1
 83a:	e0 f5       	brcc	.+120    	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
 83c:	fc 01       	movw	r30, r24
 83e:	e4 5c       	subi	r30, 0xC4	; 196
 840:	ff 4f       	sbci	r31, 0xFF	; 255
 842:	0c 94 03 05 	jmp	0xa06	; 0xa06 <__tablejump2__>
			case PD0:
			DDRD |= (1<<PD0);
 846:	8a b1       	in	r24, 0x0a	; 10
 848:	81 60       	ori	r24, 0x01	; 1
 84a:	8a b9       	out	0x0a, r24	; 10
			PORTD &= ~(1<<PD0);
 84c:	8b b1       	in	r24, 0x0b	; 11
 84e:	8e 7f       	andi	r24, 0xFE	; 254
 850:	8b b9       	out	0x0b, r24	; 11
			break;
 852:	08 95       	ret
			case PD1:
			DDRD |= (1<<PD1);
 854:	8a b1       	in	r24, 0x0a	; 10
 856:	82 60       	ori	r24, 0x02	; 2
 858:	8a b9       	out	0x0a, r24	; 10
			PORTD &= ~(1<<PD1);
 85a:	8b b1       	in	r24, 0x0b	; 11
 85c:	8d 7f       	andi	r24, 0xFD	; 253
 85e:	8b b9       	out	0x0b, r24	; 11
			break;
 860:	08 95       	ret
			case PD2:
			DDRD |= (1<<PD2);
 862:	8a b1       	in	r24, 0x0a	; 10
 864:	84 60       	ori	r24, 0x04	; 4
 866:	8a b9       	out	0x0a, r24	; 10
			PORTD &= ~(1<<PD2);
 868:	8b b1       	in	r24, 0x0b	; 11
 86a:	8b 7f       	andi	r24, 0xFB	; 251
 86c:	8b b9       	out	0x0b, r24	; 11
			break;
 86e:	08 95       	ret
			case PD3:
			DDRD |= (1<<PD3);
 870:	8a b1       	in	r24, 0x0a	; 10
 872:	88 60       	ori	r24, 0x08	; 8
 874:	8a b9       	out	0x0a, r24	; 10
			PORTD &= ~(1<<PD3);
 876:	8b b1       	in	r24, 0x0b	; 11
 878:	87 7f       	andi	r24, 0xF7	; 247
 87a:	8b b9       	out	0x0b, r24	; 11
			break;
 87c:	08 95       	ret
			case PD4:
			DDRD |= (1<<PD4);
 87e:	8a b1       	in	r24, 0x0a	; 10
 880:	80 61       	ori	r24, 0x10	; 16
 882:	8a b9       	out	0x0a, r24	; 10
			PORTD &= ~(1<<PD4);
 884:	8b b1       	in	r24, 0x0b	; 11
 886:	8f 7e       	andi	r24, 0xEF	; 239
 888:	8b b9       	out	0x0b, r24	; 11
			break;
 88a:	08 95       	ret
			case PD5:
			DDRD |= (1<<PD5);
 88c:	8a b1       	in	r24, 0x0a	; 10
 88e:	80 62       	ori	r24, 0x20	; 32
 890:	8a b9       	out	0x0a, r24	; 10
			PORTD &= ~(1<<PD5);
 892:	8b b1       	in	r24, 0x0b	; 11
 894:	8f 7d       	andi	r24, 0xDF	; 223
 896:	8b b9       	out	0x0b, r24	; 11
			break;
 898:	08 95       	ret
			case PD6:
			DDRD |= (1<<PD6);
 89a:	8a b1       	in	r24, 0x0a	; 10
 89c:	80 64       	ori	r24, 0x40	; 64
 89e:	8a b9       	out	0x0a, r24	; 10
			PORTD &= ~(1<<PD6);
 8a0:	8b b1       	in	r24, 0x0b	; 11
 8a2:	8f 7b       	andi	r24, 0xBF	; 191
 8a4:	8b b9       	out	0x0b, r24	; 11
			break;
 8a6:	08 95       	ret
			case PD7:
			DDRD |= (1<<PD7);
 8a8:	8a b1       	in	r24, 0x0a	; 10
 8aa:	80 68       	ori	r24, 0x80	; 128
 8ac:	8a b9       	out	0x0a, r24	; 10
			PORTD &= ~(1<<PD7);
 8ae:	8b b1       	in	r24, 0x0b	; 11
 8b0:	8f 77       	andi	r24, 0x7F	; 127
 8b2:	8b b9       	out	0x0b, r24	; 11
 8b4:	08 95       	ret

000008b6 <OCHOSEGMENTOS>:
 *  Author: PC
 */ 
#include "Utileria.h"

void OCHOSEGMENTOS(uint8_t VALOR, uint8_t PUERTO, uint8_t PIN){
	switch (VALOR)
 8b6:	90 e0       	ldi	r25, 0x00	; 0
 8b8:	8a 30       	cpi	r24, 0x0A	; 10
 8ba:	91 05       	cpc	r25, r1
 8bc:	08 f0       	brcs	.+2      	; 0x8c0 <OCHOSEGMENTOS+0xa>
 8be:	48 c0       	rjmp	.+144    	; 0x950 <__stack+0x51>
 8c0:	fc 01       	movw	r30, r24
 8c2:	ec 5b       	subi	r30, 0xBC	; 188
 8c4:	ff 4f       	sbci	r31, 0xFF	; 255
 8c6:	0c 94 03 05 	jmp	0xa06	; 0xa06 <__tablejump2__>
	{
	case 0:
		PORTD |= 0x3F;
 8ca:	8b b1       	in	r24, 0x0b	; 11
 8cc:	8f 63       	ori	r24, 0x3F	; 63
 8ce:	8b b9       	out	0x0b, r24	; 11
		PORTD &= ~(1<<PIND6);
 8d0:	8b b1       	in	r24, 0x0b	; 11
 8d2:	8f 7b       	andi	r24, 0xBF	; 191
 8d4:	8b b9       	out	0x0b, r24	; 11
		break;
 8d6:	3f c0       	rjmp	.+126    	; 0x956 <__stack+0x57>
	case 1:
		PORTD |= 0x06;
 8d8:	8b b1       	in	r24, 0x0b	; 11
 8da:	86 60       	ori	r24, 0x06	; 6
 8dc:	8b b9       	out	0x0b, r24	; 11
		PORTD &= ~((1<<PIND0)|(1<<PIND3)|(1<<PIND4)|(1<<PIND5)|(1<<PIND6));
 8de:	8b b1       	in	r24, 0x0b	; 11
 8e0:	86 78       	andi	r24, 0x86	; 134
 8e2:	8b b9       	out	0x0b, r24	; 11
		break;
 8e4:	38 c0       	rjmp	.+112    	; 0x956 <__stack+0x57>
	case 2:
		PORTD |= 0x5B;
 8e6:	8b b1       	in	r24, 0x0b	; 11
 8e8:	8b 65       	ori	r24, 0x5B	; 91
 8ea:	8b b9       	out	0x0b, r24	; 11
		PORTD &= ~((1<<PIND2)|(1<<PIND5));
 8ec:	8b b1       	in	r24, 0x0b	; 11
 8ee:	8b 7d       	andi	r24, 0xDB	; 219
 8f0:	8b b9       	out	0x0b, r24	; 11
		break;	
 8f2:	31 c0       	rjmp	.+98     	; 0x956 <__stack+0x57>
	case 3:
		PORTD |= 0x4F;
 8f4:	8b b1       	in	r24, 0x0b	; 11
 8f6:	8f 64       	ori	r24, 0x4F	; 79
 8f8:	8b b9       	out	0x0b, r24	; 11
		PORTD &= ~((1<<PIND4)|(1<<PIND5));
 8fa:	8b b1       	in	r24, 0x0b	; 11
 8fc:	8f 7c       	andi	r24, 0xCF	; 207
 8fe:	8b b9       	out	0x0b, r24	; 11
		break;
 900:	2a c0       	rjmp	.+84     	; 0x956 <__stack+0x57>
	case 4:
		PORTD |= 0x66;
 902:	8b b1       	in	r24, 0x0b	; 11
 904:	86 66       	ori	r24, 0x66	; 102
 906:	8b b9       	out	0x0b, r24	; 11
		PORTD &= ~((1<<PIND0)|(1<<PIND3)|(1<<PIND4));
 908:	8b b1       	in	r24, 0x0b	; 11
 90a:	86 7e       	andi	r24, 0xE6	; 230
 90c:	8b b9       	out	0x0b, r24	; 11
		break;
 90e:	23 c0       	rjmp	.+70     	; 0x956 <__stack+0x57>
	case 5:
		PORTD |= 0x6D;
 910:	8b b1       	in	r24, 0x0b	; 11
 912:	8d 66       	ori	r24, 0x6D	; 109
 914:	8b b9       	out	0x0b, r24	; 11
		PORTD &= ~((1<<PIND1)|(1<<PIND4));
 916:	8b b1       	in	r24, 0x0b	; 11
 918:	8d 7e       	andi	r24, 0xED	; 237
 91a:	8b b9       	out	0x0b, r24	; 11
		break;
 91c:	1c c0       	rjmp	.+56     	; 0x956 <__stack+0x57>
	case 6:
		PORTD |= 0x7D;
 91e:	8b b1       	in	r24, 0x0b	; 11
 920:	8d 67       	ori	r24, 0x7D	; 125
 922:	8b b9       	out	0x0b, r24	; 11
		PORTD &= ~((1<<PIND1));
 924:	8b b1       	in	r24, 0x0b	; 11
 926:	8d 7f       	andi	r24, 0xFD	; 253
 928:	8b b9       	out	0x0b, r24	; 11
		break;
 92a:	15 c0       	rjmp	.+42     	; 0x956 <__stack+0x57>
	case 7:
		PORTD |= 0x07;
 92c:	8b b1       	in	r24, 0x0b	; 11
 92e:	87 60       	ori	r24, 0x07	; 7
 930:	8b b9       	out	0x0b, r24	; 11
		PORTD &= ~((1<<PIND3)|(1<<PIND4)|(1<<PIND5)|(1<<PIND6));
 932:	8b b1       	in	r24, 0x0b	; 11
 934:	87 78       	andi	r24, 0x87	; 135
 936:	8b b9       	out	0x0b, r24	; 11
		break;
 938:	0e c0       	rjmp	.+28     	; 0x956 <__stack+0x57>
	case 8:
		PORTD |= 0x7F;
 93a:	8b b1       	in	r24, 0x0b	; 11
 93c:	8f 67       	ori	r24, 0x7F	; 127
 93e:	8b b9       	out	0x0b, r24	; 11
		break;
 940:	0a c0       	rjmp	.+20     	; 0x956 <__stack+0x57>
	case 9:
		PORTD |= 0x6F;
 942:	8b b1       	in	r24, 0x0b	; 11
 944:	8f 66       	ori	r24, 0x6F	; 111
 946:	8b b9       	out	0x0b, r24	; 11
		PORTD &= ~(1<<PD6);
 948:	8b b1       	in	r24, 0x0b	; 11
 94a:	8f 7b       	andi	r24, 0xBF	; 191
 94c:	8b b9       	out	0x0b, r24	; 11
		break;
 94e:	03 c0       	rjmp	.+6      	; 0x956 <__stack+0x57>
	default:
		PORTD &= ~(0x7F);
 950:	8b b1       	in	r24, 0x0b	; 11
 952:	80 78       	andi	r24, 0x80	; 128
 954:	8b b9       	out	0x0b, r24	; 11
		break;
	}
	switch (PUERTO)
 956:	62 30       	cpi	r22, 0x02	; 2
 958:	81 f1       	breq	.+96     	; 0x9ba <__stack+0xbb>
 95a:	63 30       	cpi	r22, 0x03	; 3
 95c:	21 f0       	breq	.+8      	; 0x966 <__stack+0x67>
 95e:	61 30       	cpi	r22, 0x01	; 1
 960:	09 f0       	breq	.+2      	; 0x964 <__stack+0x65>
 962:	50 c0       	rjmp	.+160    	; 0xa04 <__stack+0x105>
 964:	04 c0       	rjmp	.+8      	; 0x96e <__stack+0x6f>
	{
	case D: 
		PORTD |= (1<<PIND7);
 966:	8b b1       	in	r24, 0x0b	; 11
 968:	80 68       	ori	r24, 0x80	; 128
 96a:	8b b9       	out	0x0b, r24	; 11
		break;
 96c:	08 95       	ret
	case B:
		switch (PIN)
 96e:	42 30       	cpi	r20, 0x02	; 2
 970:	a1 f0       	breq	.+40     	; 0x99a <__stack+0x9b>
 972:	28 f4       	brcc	.+10     	; 0x97e <__stack+0x7f>
 974:	44 23       	and	r20, r20
 976:	49 f0       	breq	.+18     	; 0x98a <__stack+0x8b>
 978:	41 30       	cpi	r20, 0x01	; 1
 97a:	59 f0       	breq	.+22     	; 0x992 <__stack+0x93>
 97c:	08 95       	ret
 97e:	44 30       	cpi	r20, 0x04	; 4
 980:	a1 f0       	breq	.+40     	; 0x9aa <__stack+0xab>
 982:	78 f0       	brcs	.+30     	; 0x9a2 <__stack+0xa3>
 984:	45 30       	cpi	r20, 0x05	; 5
 986:	a9 f0       	breq	.+42     	; 0x9b2 <__stack+0xb3>
 988:	08 95       	ret
		{
		case 0:
			PORTB |= (1<<PB0);
 98a:	85 b1       	in	r24, 0x05	; 5
 98c:	81 60       	ori	r24, 0x01	; 1
 98e:	85 b9       	out	0x05, r24	; 5
			break;
 990:	08 95       	ret
		case 1:
			PORTB |= (1<<PB1);
 992:	85 b1       	in	r24, 0x05	; 5
 994:	82 60       	ori	r24, 0x02	; 2
 996:	85 b9       	out	0x05, r24	; 5
			break;
 998:	08 95       	ret
		case 2:
			PORTB |= (1<<PB2);
 99a:	85 b1       	in	r24, 0x05	; 5
 99c:	84 60       	ori	r24, 0x04	; 4
 99e:	85 b9       	out	0x05, r24	; 5
			break;
 9a0:	08 95       	ret
		case 3:
			PORTB |= (1<<PB3);
 9a2:	85 b1       	in	r24, 0x05	; 5
 9a4:	88 60       	ori	r24, 0x08	; 8
 9a6:	85 b9       	out	0x05, r24	; 5
			break;
 9a8:	08 95       	ret
		case 4:
			PORTB |= (1<<PB4);
 9aa:	85 b1       	in	r24, 0x05	; 5
 9ac:	80 61       	ori	r24, 0x10	; 16
 9ae:	85 b9       	out	0x05, r24	; 5
			break;
 9b0:	08 95       	ret
		case 5:
			PORTB |= (1<<PB5);
 9b2:	85 b1       	in	r24, 0x05	; 5
 9b4:	80 62       	ori	r24, 0x20	; 32
 9b6:	85 b9       	out	0x05, r24	; 5
			break;
 9b8:	08 95       	ret
		default:
			break;
		}
		break;
	case C:
		switch (PIN)
 9ba:	42 30       	cpi	r20, 0x02	; 2
 9bc:	a1 f0       	breq	.+40     	; 0x9e6 <__stack+0xe7>
 9be:	28 f4       	brcc	.+10     	; 0x9ca <__stack+0xcb>
 9c0:	44 23       	and	r20, r20
 9c2:	49 f0       	breq	.+18     	; 0x9d6 <__stack+0xd7>
 9c4:	41 30       	cpi	r20, 0x01	; 1
 9c6:	59 f0       	breq	.+22     	; 0x9de <__stack+0xdf>
 9c8:	08 95       	ret
 9ca:	44 30       	cpi	r20, 0x04	; 4
 9cc:	a1 f0       	breq	.+40     	; 0x9f6 <__stack+0xf7>
 9ce:	78 f0       	brcs	.+30     	; 0x9ee <__stack+0xef>
 9d0:	45 30       	cpi	r20, 0x05	; 5
 9d2:	a9 f0       	breq	.+42     	; 0x9fe <__stack+0xff>
 9d4:	08 95       	ret
		{
			case 0:
				PORTC |= (1<<PB0);
 9d6:	88 b1       	in	r24, 0x08	; 8
 9d8:	81 60       	ori	r24, 0x01	; 1
 9da:	88 b9       	out	0x08, r24	; 8
				break;
 9dc:	08 95       	ret
			case 1:
				PORTC |= (1<<PB1);
 9de:	88 b1       	in	r24, 0x08	; 8
 9e0:	82 60       	ori	r24, 0x02	; 2
 9e2:	88 b9       	out	0x08, r24	; 8
				break;
 9e4:	08 95       	ret
			case 2:
				PORTC |= (1<<PB2);
 9e6:	88 b1       	in	r24, 0x08	; 8
 9e8:	84 60       	ori	r24, 0x04	; 4
 9ea:	88 b9       	out	0x08, r24	; 8
				break;
 9ec:	08 95       	ret
			case 3:
				PORTC |= (1<<PB3);
 9ee:	88 b1       	in	r24, 0x08	; 8
 9f0:	88 60       	ori	r24, 0x08	; 8
 9f2:	88 b9       	out	0x08, r24	; 8
				break;
 9f4:	08 95       	ret
			case 4:
				PORTC |= (1<<PB4);
 9f6:	88 b1       	in	r24, 0x08	; 8
 9f8:	80 61       	ori	r24, 0x10	; 16
 9fa:	88 b9       	out	0x08, r24	; 8
				break;
 9fc:	08 95       	ret
			case 5:
				PORTC |= (1<<PB5);
 9fe:	88 b1       	in	r24, 0x08	; 8
 a00:	80 62       	ori	r24, 0x20	; 32
 a02:	88 b9       	out	0x08, r24	; 8
 a04:	08 95       	ret

00000a06 <__tablejump2__>:
 a06:	ee 0f       	add	r30, r30
 a08:	ff 1f       	adc	r31, r31
 a0a:	05 90       	lpm	r0, Z+
 a0c:	f4 91       	lpm	r31, Z
 a0e:	e0 2d       	mov	r30, r0
 a10:	09 94       	ijmp

00000a12 <_exit>:
 a12:	f8 94       	cli

00000a14 <__stop_program>:
 a14:	ff cf       	rjmp	.-2      	; 0xa14 <__stop_program>
